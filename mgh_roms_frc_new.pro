;+
; NAME:
;   MGH_ROMS_FRC_NEW
;
; PURPOSE:
;   Create an empty forcing file given a ROMS history/grid file as
;   a template
;
; CATEGORY:
;   ROMS
;
; CALLING SEQUENCE:
;   MGH_ROMS_FRC_NEW, file_frc, file_tpl
;
; POSITIONAL PARAMETERS:
;   file_frc (input, scalar string)
;     The name of a ROMS climate file to be created (write-only)
;
;   file_tpl (input, scalar string)
;     The name of a ROMS history/grid file to act as a template (read-only)
;
; KEYWORD PARAMETERS:
;   NO_TEMPLATE (input, switch)
;     Set this keyword to create a forcing file not based on a
;     template and with no grid information.
;
; MODIFICATION HISTORY:
;   Mark Hadfield, 2003-03:
;     Written.
;   Mark Hadfield, 2004-01:
;     Modified for new time-variable handling. Time dimension and variable
;     no longer added in this routine.
;   Mark Hadfield, 2009-10:
;     Added NO_TEMPLATE support.
;   Mark Hadfield, 2010-09:
;     Variables "xl" and "el" are no longer copied to the forcing file, as this
;     causes problems with grid files generated by gridgen (it makes them depend
;     on the dimension "one" FFS) and they're never used anyway.
;-

pro mgh_roms_frc_new, file_frc, file_tpl, $
     NO_TEMPLATE=no_template

   compile_opt DEFINT32
   compile_opt STRICTARR
   compile_opt STRICTARRSUBS
   compile_opt LOGICAL_PREDICATE

   ;; Check file name etc

   if n_elements(file_frc) eq 0 then $
        message, 'Name for forcing file not supplied'

   message, /INFORM, string(FORMAT='(%"Creating forcing file %s")', file_frc)

   ofrc = obj_new('MGHncFile', file_frc, /CREATE, /CLOBBER, /NETCDF4_FORMaT)

   ofrc->AttAdd, /GLOBAL, 'type', 'ROMS forcing file'

   fmt = '(%"Created by procedure mgh_roms_frc_new at %s")'
   ofrc->AttAdd, /GLOBAL, 'history', $
                 string(FORMAT=fmt, mgh_dt_string(mgh_dt_now()))

   if ~ keyword_set(no_template) then begin

      if n_elements(file_tpl) eq 0 then $
           message, 'Name for template file not supplied'

      if ~ file_test(file_tpl, /READ) then $
           message, 'Template file cannot be read'

      message, /INFORM, string(FORMAT='(%"Opening template file %s")', file_tpl)

      otpl = obj_new('MGHncReadFile', file_tpl)

      ofrc->AttAdd, /GLOBAL, 'template_file', file_tpl

      ;; Specify dimensions

      message, /INFORM, 'Copying dimensions to forcing file'

      ofrc->DimCopy, otpl, $
           ['xi_rho','eta_rho','xi_u','eta_u','xi_v','eta_v']

      ;; Specify grid variables

      vars_grd = ['h','f','pm','pn','lon_rho','lat_rho','angle']

      if otpl->HasVar('mask_rho') && otpl->HasVar('mask_v') && $
           otpl->HasVar('mask_v') then begin
         vars_grd = [vars_grd,'mask_rho','mask_u','mask_v']
      endif

      ;; Copy variables

      message, /INFORM, 'Copying grid variables to forcing file'

      ofrc->VarCopy, otpl, /DEFINITION, vars_grd
      ofrc->VarCopy, otpl, /ATTRIBUTES, vars_grd
      ofrc->VarCopy, otpl, /DATA, vars_grd

      obj_destroy, otpl

   endif

   ;; Clean up

   obj_destroy, ofrc

end

